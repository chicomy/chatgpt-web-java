spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USER_NAME:root}
    password: ${MYSQL_PASSWORD:123456}
    url: ${JDBC_URL:jdbc:mysql://localhost:3309/chat?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true}
  jpa:
    hibernate:
      ddl-auto: update #根据实体类创建/更新表
    #show-sql: true #控制台是否输出sql
  data:
    redis:
      # Redis数据库索引（默认为0）
      database: ${REDIS_DATABASE:1}
      # Redis服务器地址
      host: ${REDIS_HOST:127.0.0.1}
      # Redis服务器连接端口
      port: ${REDIS_PORT:6379}
      username: ${REDIS_USERNAME:}
      password: ${REDIS_PASSWORD:}
      timeout:  ${REDIS_TIMEOUT:10s}
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: ${REDIS_MAX_ACTIVE:200}
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: ${REDIS_MAX_WAIT:-1ms}
          # 连接池中的最大空闲连接
          max-idle: ${REDIS_MAX_IDLE:10}
          # 连接池中的最小空闲连接
          min-idle:  ${REDIS_MIN_IDLE:0}
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true  #驼峰命名
    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler #配置枚举
  #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  #日志输出
  mapper-locations: classpath*:mapper/*.xml  #xml路径配置 多个逗号分隔
  global-config:
    db-config:
      id-type: auto  # id自增
      #table-prefix: t_ #表明前缀 全局配置后可省略@TableName()配置
chat:
  # 访问密码
  auth_secret_key: ${CHAT_AUTH_SECRET_KEY:}
  # OpenAI API Key - https://platform.openai.com/overview
  openai_api_key: ${CHAT_OPENAI_API_KEY:}
  # change this to an `accessToken` extracted from the ChatGPT site's `https://chat.openai.com/api/auth/session` response
  openai_access_token: ${CHAT_OPENAI_ACCESS_TOKEN:}
  # OpenAI API Base URL - https://api.openai.com/，要加/后缀
  openai_api_base_url: ${CHAT_OPENAI_API_BASE_URL:https://api.openai.com/}}
  # API Model - https://platform.openai.com/docs/models apiKey 和 AccessToken mode 不一样
  openai_api_model: ${CHAT_OPENAI_API_MODEL:}
  # 反向代理地址 AccessToken 时使用
  api_reverse_proxy: ${CHAT_API_REVERSE_PROXY:https://bypass.churchless.tech/api/conversation}
  # 超时毫秒
  timeout_ms: ${CHAT_TIMEOUT_MS:100000}
  # HTTP 代理
  http_proxy_host: ${CHAT_HTTP_PROXY_HOST:127.0.0.1}
  # HTTP 代理
  http_proxy_port: ${CHAT_HTTP_PROXY_PORT:}
  # 管理端账号
  admin_account: ${CHAT_ADMIN_ACCOUNT:admin}
  # 管理端密码
  admin_password: ${CHAT_ADMIN_PASSWORD:admin}
  # 管理端敏感词是否脱敏，演示用
  admin_sensitive_word_desensitized_enabled: ${CHAT_ADMIN_SENSITIVE_WORD_DESENSITIZED_ENABLED:true}
  # 全局时间内最大请求次数
  maxRequest: ${CHAT_MAX_REQUEST:60}
  # 全局最大请求时间间隔（秒）
  maxRequestSecond: ${CHAT_MAX_REQUEST_SECOND:1800}
  # ip 时间内最大请求次数
  ipMaxRequest: ${CHAT_IP_MAX_REQUEST:5}
  # ip 最大请求时间间隔（秒）
  ipMaxRequestSecond: ${CHAT_IP_MAX_REQUEST_SECOND:3600}
  # 限制上下文对话的数量
  limitQuestionContextCount: ${CHAT_LIMIT_QUESTION_CONTEXT_COUNT:3}
  # 是否展示余额，默认不展示
  isShowBalance: ${CHAT_IS_SHOW_BALANCE:false}
  # 是否展示管理端隐藏的消息，默认不展示
  isAdminShowHiddenMessage: ${CHAT_IS_ADMIN_SHOW_HIDDEN_MESSAGE:false}
